


		A
	B		C
		D -> show()


Bitwise expressions:

..........		6	5	4	3	2	1	0
				2	2	2	2	2	2	2
				__________________________
				64	32	16	8	4	2	1
 5 -							1	0	1	
 9 -						1	0	0	1
 10-						1	0	1	0
5	-						0   1   0   1
10							1	0	1	0

 3*9 - 3+3+3+3+3+... 9 times

 XOR - Exclusive OR
 0 0  0
 1 0  1
 0 1  1
 1 1  0

 OR
 0 0  0
 1 0  1
 0 1  1
 1 1  1


 test::obj.X[0] = 3*(10);
  test::obj.X[0] = 3*(~5);

  a 
  ~a = b
  ~b = a


  unsigned int - 32 bits for number representation
  signed int - 1 bit used to denote the sign, 31 bits for the number

  1 bit - 31 bit
  0 1111111111111111111111111111
  1 000000000

  unsigned
  all 32 bits

  32 - 5 = 27 bits

  27
  0000000000000000000000011011 - 4 byte rep

  ~27 = 4294967268
  1111111111111111111111100100 

  int a = 4294967268
  int x = a + a;

  short int b = 27
  int x = (~b) + (~b)


  (a<< b) = a * 2^b
  (a>> b) = a / 2^b

  7 - 00000000000000000000000000000111
  9 - 00000000000000000000000000001001
  13- 00000000000000000000000000001101
  17- 00000000000000000000000000010001 

  1 - 00000000000000000000000000000001
  ___________________________________________


  17 = (16+1)

  16 - 00000000000000000000000000010000


  Fast remainder:

  27 & (4 - 1) =	27 % 4
  a & (b - 1) = a % b